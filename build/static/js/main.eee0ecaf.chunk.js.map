{"version":3,"sources":["logo.svg","assets/tv_1.jpg","assets/tv_2.jpg","assets/tv_3.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","innerHeight","window","OrderPose","posed","div","enter","opacity","exit","App","useState","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","setting","orderManaged","setOrderManaged","useEffect","setInterval","parsed","queryString","parse","location","search","console","log","id","outlet","outlet_id","axios","get","headers","then","response","rebuild","data","result","orders","filter","x","i","date","moment","date_completed","minutes","duration","diff","asMinutes","catch","error","finally","style","display","flexDirection","backgroundColor","width","height","src","require","padding","overflow","color","fontSize","fontWeight","borderBottom","marginBottom","paddingBottom","map","d","key","order_status_id","borderRadius","marginRight","lineHeight","order_number","user","first_name","last_name","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eee0ecaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/tv_1.035787fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tv_2.7c0e2582.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tv_3.040bf302.jpg\";","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport logo from './logo.svg';\nimport './App.css';\nimport Slider from \"react-slick\";\nimport posed, { PoseGroup } from 'react-pose';\nimport queryString from 'query-string'\n\nlet innerHeight = window.innerHeight;\n\nconst OrderPose = posed.div({\n  enter: { opacity: 1},\n  exit: { opacity: 0}\n});\n\nfunction App() {\n  \n  const [setting, setSetting] = useState({\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    arrows: false\n  })\n\n  const [order, setOrder] = useState([])\n  const [orderManaged, setOrderManaged] = useState([])\n\n  const getOrderData = (id) => {\n    axios.get('https://api.dailybox.id/api/orders/latest-dine-in-by-outlet-id/' + id, {\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": \"uO40t2uyPCUuFIAo\",\n        \"x-key\": \"api@dailybox.id\"\n      }\n    })\n    .then(function (response) {\n      let rebuild = response.data.result.orders.filter((x, i) => {\n        let date = moment();\n        let date_completed = moment(x.date_completed)\n        let duration = moment.duration(date.diff(date_completed));\n        let minutes = duration.asMinutes();\n        console.log(minutes)\n        if(minutes <= 6){\n          return true;\n        } else {\n          return false;\n        }\n      })\n\n\n      setOrderManaged(rebuild)\n      console.log(rebuild);\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n    .finally(function () {});\n  }\n\n  const addOrderDummy = async (data) => {\n    try {\n      setOrderManaged([...orderManaged, data]);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    setInterval(() => {\n      const parsed = queryString.parse(window.location.search);\n      console.log(parsed);\n      let outlet = (parsed.outlet_id ? parsed.outlet_id : \"5cde8c85a8f16c176722793c\");\n      getOrderData(outlet);   \n      console.log(outlet)    \n    }, 5000);\n  }, [])\n\n\n\n  // order_number: \"O12197320086\"\n  // user_id: \"5a5f3cd6f6ad222d467e8ad1\"\n  // order_status_id: \"59a67dfdb5aab42dfcc4c295\"\n  // payment_method_id: 2\n  // delivery_address_id: \"\"\n  // delivery_time_id: \"\"\n  // delivery_fee: 0\n  // total_product_count: 1\n  // total_item_count: 1\n  // total_order: 53000\n  // total_discount: 0\n  // total_tax: 0\n  // grand_total: 53000\n  // grand_total_rounded: 53000\n  // flag_paid: true\n  // payment_datetime: \"2019-12-27T22:14:20.650Z\"\n  // outlet_id: \"5cde8c85a8f16c176722793c\"\n  // date_added: \"2019-12-27T22:14:20.447Z\"\n  // date_updated: \"2019-12-27T22:14:20.763Z\"\n  // id: \"5e06823c717cbd3d058585f0\"\n  // update_user_id: \"5a5f3cd6f6ad222d467e8ad1\"\n  // total_order_point: 53\n  // grand_total_point: 53\n  // grand_total_rounded_point: 53\n  // total_discount_point: 0\n  // total_tax_point: 0\n  // service_type: \"DINE-IN\"\n  // payment_channel_code: \"0\"\n  // payment_channel_name: \"Dailycoins\"\n  // flag_dine_in: true\n  // pickup_type: 0\n  // delivery_fee_point: 0\n  // exchange_rate: 1000\n\n  // user:\n  //   email: \"didi@krestech.id\"\n  //   first_name: \"Ahmad\"\n  //   last_name: \"Awdiyanto\"\n  //   mobile_phone: \"08568885051\"\n  //   flag_active: true\n  //   date_added: \"2018-01-17T12:08:53.931Z\"\n  //   date_updated: \"2019-12-27T22:14:20.645Z\"\n  //   id: \"5a5f3cd6f6ad222d467e8ad1\"\n  //   user_type_id: 1\n  //   register_origin_id: 1\n  //   db_point: 834\n  //   static_va_number_suffix: \"281993\"\n  //   gender: \"1\"\n  //   birth_date: \"2018-06-10\"\n  \n  // orderStatus:\n  //   order_status_name: \"On Process\"\n  //   order_status_number: 2\n  //   flag_active: true\n  //   date_added: \"2017-08-30T08:57:33.662Z\"\n  //   date_updated: \"2017-08-30T09:10:33.116Z\"\n  //   id: \"59a67dfdb5aab42dfcc4c295\"\n  \n  // outlet:\n  //   city_id: \"597f3332cc4c6c28889cb11d\"\n  //   outlet_name: \"Green Lake\"\n  //   latitude: \"6.1858935\"\n  //   longitude: \"106.701285\"\n  //   flag_active: true\n  //   date_added: \"2019-05-17T10:27:17.132Z\"\n  //   date_updated: \"2019-05-17T10:27:17.132Z\"\n  //   id: \"5cde8c85a8f16c176722793c\"\n  //   address: \"Rukan Cordoba, Jl. Green Lake City Boulevard, RT.007/RW.009, Petir, Kec. Cipondoh, Banten 15147\"\n  //   outlet_code: \"GLC\"\n  \n  // orderDetails: Array(1)\n  // 0:\n  //   order_id: \"5e06823c717cbd3d058585f0\"\n  //   menu_id: \"5b650ac12ddaa2380c5839d0\"\n  //   qty_ordered: 1\n  //   qty_in_stock: 1\n  //   menu_price: 53000\n  //   menu_point: 53\n  //   discount_price: 0\n  //   discount_point: 0\n  //   note: \"\"\n  //   date_added: \"2019-12-27T22:14:20.573Z\"\n  //   date_updated: \"2019-12-27T22:14:20.573Z\"\n  //   id: \"5e06823c717cbd3d058585f1\"\n  //   category_id: \"59897f9d67150a1aa044974b\"\n  //   options: Array(3)\n  //   0: {field: \"Nasi\", value: \"White Rice\", price: \"0\"}\n  //   1: {field: \"Telur\", value: \"Sunny Side Up\", price: \"0\"}\n  //   2: {field: \"Level Pedas\", value: \"Mild\", price: \"0\"}\n  //   length: 3\n  //   __proto__: Array(0)\n  //   menu:\n  //   menu_name: \"Wagyu Basil\"\n  //   menu_desc: \"Nasi Putih dengan Wagyu Kemangi (Wagyu Basil) dan Telur Mata Sapi (Sunny Side Up)\"\n  //   category_id: \"59897f9d67150a1aa044974b\"\n  //   price: 53000\n  //   db_point: 53\n  //   flag_active: true\n  //   flag_delivery: true\n  //   flag_dine_in: false\n  //   flag_on_stock: true\n  //   date_added: \"2018-08-04T02:09:05.250Z\"\n  //   date_updated: \"2019-12-26T08:12:11.957Z\"\n  //   id: \"5b650ac12ddaa2380c5839d0\"\n  //   menu_long_desc: \"Nasi dengan wagyu berbumbu sedap dan wangi khas daun kemangi dan telur mata sapi.\"\n  //   menu_desc_detail: [{…}]\n  //   options: (3) [{…}, {…}, {…}]\n  //   outlets: (4) [{…}, {…}, {…}, {…}]\n  //   price_old: 58000\n  //   db_point_old: 48\n  //   menuImages: [{…}]\n\n\n  return (\n    <div style={{display: \"flex\", flexDirection: \"row\", backgroundColor: \"#000\"}}>\n      <div style={{width: (innerHeight * 1.3), height: innerHeight, backgroundColor:\"red\"}}>\n        <Slider {...setting}>\n          <div>\n            <img style={{width: (innerHeight * 1.3), height: innerHeight}} src={require('./assets/tv_1.jpg')} />\n          </div>\n          <div>\n            <img style={{width: (innerHeight * 1.3), height: innerHeight}} src={require('./assets/tv_2.jpg')} />\n          </div>\n          <div>\n            <img style={{width: (innerHeight * 1.3), height: innerHeight}} src={require('./assets/tv_3.jpg')} />\n          </div>\n        </Slider>\n      </div>\n      <div style={{padding: 20, width: \"100%\", overflow: \"hidden\"}}>\n        <div style={{color: \"#fff\", fontSize: 30, fontWeight: \"bold\", borderBottom: \"1px solid #fff\", marginBottom: 10, paddingBottom: 10}}>Order Lists</div>\n        <PoseGroup>\n        { orderManaged.map((x, d) => {\n          return (\n            <OrderPose key={d} style={{padding: 10, backgroundColor: (x.order_status_id === \"5a055f4e8f46003610d9659b\"  ? '#49b665' : '#fff'), borderRadius: 5, marginBottom: 5, display: \"flex\", flexDirection: \"crow\"}}>\n              <div style={{fontSize: 20, marginRight: 20, lineHeight: \"30px\"}}>#{x.order_number}</div>\n              <div style={{fontSize: 30, fontWeight: \"bold\", lineHeight: \"30px\"}}>{x.user.first_name} {x.user.last_name}</div>\n            </OrderPose>\n          )\n        })}\n        </PoseGroup>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}